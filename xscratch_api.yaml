swagger: "2.0"
info:
  version: "1"
  title: "G.API"
  description: "API defined using swagger for Canvas assignment."
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /Xscratch1/G.API/1
schemes:
  - https

# Consumer
# UC.1 Create playlist
# post /playlist
# UC.2 Show list of existing playlists
# get /playlist
# UC.3 Delete playlist
# delete /playlist
# UC.4 Show ordered list of video segments in playlist
# get /playlist/videos
# UC.5 Play playlist
# Frontend
# UC.6 Upload new local video segments
# post /video
# UC.7 Delete local video segment
# delete /video
# UC.8 Append video segment to end of existing playlist
# post /playlist/video
# UC.9 Remove video segment from existing playlist
# delete /playlist/video
# UC.10 Show list of video segments uploaded to library
# get /videos
# UC.11 Show list of video segments that match search criteria
# Frontend
# UC.12 Preview video
# Frontend

# Admin
# UC.13 Mark Local Segment
# post /video/availability
# UC.14 Unmark Local Segment
# post /video/availability
# UC.15 Delete Local Video Segment
# delete /video (Same as UC 7)
# UC.16 Register third-party site
# post /tlp
# UC.17: Unregister third-party site
# delete /tlp
# UC.18 Preview video
# Frontend

tags:
  - name: Administrator
    description: Administrator calls
  - name: Participant
    description: Participant calls
  - name: Video
    description: Related to video
  - name: Playlist
    description: Related to playlist
  - name: TLP
    description: Related to third-party libraries

# Actual API

paths:
  /videos:
    post:
      tags:
        - Administrator
        - Participant
        - Video
      summary: Upload new local video segment
      description: UC.6
      operationId: uploadLocalSegment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: VideoPostRequest
          description: Video and metadata for storage
          required: true
          schema:
            $ref: "#/definitions/VideoRequest"
      responses:
        200:
          description: Video uploaded
          schema:
            $ref: "#/definitions/Video"
        400:
          description: invalid input, object invalid
    delete:
      tags:
        - Administrator
        - Participant
        - Video
      summary: Delete local video segment
      description: UC.7
      operationId: deleteLocalSegment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: DeleteRequest
          description: Video id to delete
          required: true
          schema:
            $ref: "#/definitions/DeleteRequest"
      responses:
        200:
          description: Video deleted
        400:
          description: invalid input, object invalid
    get:
      tags:
        - Participant
        - Video
      summary: Show list of local video segments uploaded to library
      description: UC.10
      operationId: showLocalLibrarySegments
      produces:
        - application/json
      responses:
        200:
          description: Video returned
          schema:
            $ref: "#/definitions/ListOfVideos"

  /playlists:
    get:
      tags:
        - Participant
        - Playlist
      summary: Get list of all playlists
      description: UC.2
      operationId: listPlaylists
      produces:
        - application/json
      responses:
        200:
          description: list of playlists returned
          schema:
            $ref: "#/definitions/ListOfPlaylists"
        400:
          description: Error getting playlists
    post:
      tags:
        - Participant
        - Playlist
      summary: Create new playlist
      description: UC.1
      operationId: createPlaylist
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: PlaylistPostRequest
          description: New playlist with title
          required: true
          schema:
            $ref: "#/definitions/Playlist"
      responses:
        200:
          description: New Playlist Success
          schema:
            $ref: "#/definitions/Playlist"
        400:
          description: Error getting playlists
    delete:
      tags:
        - Participant
        - Playlist
      summary: Delete playlist
      description: UC.3
      operationId: deletePlaylist
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: DeleteRequest
          description: Playlist id to delete
          required: true
          schema:
            $ref: "#/definitions/DeleteRequest"
      responses:
        200:
          description: Video deleted
        400:
          description: invalid input, object invalid

  /playlists/{id}:
    get:
      tags:
        - Participant
        - Playlist
      summary: Get playlist data
      description: UC.4
      operationId: getPlaylist
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
          description: The playlist id
      responses:
        200:
          description: list of constants returned
          schema:
            $ref: "#/definitions/Playlist"

  /playlists/{id}/video:
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: body
          name: Video to append
          description: Video to append
          required: true
          schema:
            $ref: "#/definitions/Video"
      tags:
        - Participant
        - Playlist
      summary: Append video segment to existing playlist
      description: UC.8
      operationId: appendVideoSegment
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: Video appended
          schema:
            $ref: "#/definitions/Playlist"
        400:
          description: invalid input, object invalid
    delete:
      tags:
        - Participant
        - Playlist
      summary: Remove video segment from existing playlist
      description: UC.9
      operationId: deleteVideoSegment
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          required: true
          type: integer
        - in: body
          name: DeleteRequest
          description: Video id to delete
          required: true
          schema:
            $ref: "#/definitions/DeleteRequest"
      responses:
        200:
          description: Video deleted
        400:
          description: invalid input, object invalid

  /tlp:
    post:
      tags:
        - Administrator
        - TLP
      summary: Add third-party library to list of remote video segments
      description: UC.16
      operationId: addTLP
      parameters:
        - in: body
          name: id
          description: Add third-party library by id
          required: true
          schema:
            $ref: "#/definitions/TLP"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: third-party library added
          schema:
            $ref: "#/definitions/TLP"
        400:
          description: invalid input, object invalid
    delete:
      tags:
        - Administrator
        - TLP
      summary: Remove third-party library to list of remote video segments
      description: UC.17
      operationId: removeTLP
      parameters:
        - in: body
          name: id
          description: Remove third-party library by id
          required: true
          schema:
            $ref: "#/definitions/DeleteRequest"
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: third-party library deleted
        400:
          description: invalid input, object invalid

definitions:
  VideoRequest:
    type: object
    required:
      - name
      - script
      - characters
      - video
    properties:
      name:
        type: string
      script:
        type: string
      characters:
        type: string
      video:
        type: string
  TLP:
    type: object
    required:
      - id
      - url
    properties:
      id:
        type: integer
      url:
        type: string
  DeleteRequest:
    type: object
    required:
      - id
    properties:
      path:
        type: string
      id:
        type: integer
  Playlist:
    type: object
    required:
      - name
      - id
      - videos
    properties:
      name:
        type: string
      id:
        type: integer
      videos:
        type: array
        items:
          $ref: "#/definitions/Video"
  ListOfPlaylists:
    type: object
    required:
      - playlists
    properties:
      playlists:
        type: array
        items:
          $ref: "#/definitions/Playlist"
  Video:
    type: object
    required:
      - id
      - url
      - length
      - characters
      - dialogue
      - isRemote
      - isAvailable
    properties:
      id:
        type: integer
      url:
        type: string
      length:
        type: string
      characters:
        type: array
        items:
          type: string
      dialogue:
        type: string
      isRemote:
        type: boolean
      isAvailable:
        type: boolean
  ListOfVideos:
    type: object
    required:
      - videos
    properties:
      videos:
        type: array
        items:
          $ref: "#/definitions/Video"
